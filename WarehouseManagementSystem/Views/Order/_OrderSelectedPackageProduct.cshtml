@model Warehouse.ViewModels.Admin.ProductGroupShowViewModel
@using WarehouseManagementSystem.Extensions
<div class="packageProductGroup">
    @using (Html.BeginCollectionItem("OrderProductGroups"))
    {
        <div class="row">
            <div class="col-xs-12">


                @Html.HiddenFor(a => a.Id)
                @Html.HiddenFor(a => a.Content)
                @Html.HiddenFor(a => a.Count)
                @Html.HiddenFor(a => a.SKU)
                @Html.HiddenFor(a => a.GtipCode)
                @Html.HiddenFor(a => a.QuantityPerUnit)
                @Html.HiddenFor(a => a.isPackagedCount)


            </div>
        </div>
        <div class="form-group form-group-sm col-xs-12  @Html.ModelStateFor(m => m.isChecked)">
            <div class="input-group input-group-sm">
                @if (Model.isPackagedCount != 0)
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Paketlenecek Ürünleri Seçiniz</th>
                                <th>Ürün İçeriği</th>
                                <th>Toplam Ürün Adeti</th>
                                <th>@Html.LabelFor(m => m.PackagedCount)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>



                                <td>
                                    @Html.CheckBoxFor(u => u.isChecked)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => m.Content)
                                </td>
                                <td>
                                    <span>x</span><span>@Html.DisplayFor(m => m.isPackagedCount)</span>
                                </td>
                                <td>

                                    @Html.TextBoxFor(m => m.PackagedCount)
                                    @Html.ValidationMessageFor(m => m.PackagedCount, "", new { @style = "color:red" })
                                </td>


                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>

    }
</div>

