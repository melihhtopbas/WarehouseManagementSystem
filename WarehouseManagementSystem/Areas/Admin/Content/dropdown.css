

.text-sm {
    .dropdown-menu

{
    font-size: $font-size-sm !important;
}

.dropdown-toggle::after {
    vertical-align: .2rem;
}

}

.dropdown-item-title {
    font-size: $font-size-base;
    margin: 0;
}

.dropdown-icon {
    &::after

{
    margin-left: 0;
}

}

.dropdown-menu-lg {
    max-width: 300px;
    min-width: 280px;
    padding: 0;
    .dropdown-divider

{
    margin: 0;
}

.dropdown-item {
    padding: $dropdown-padding-y $dropdown-item-padding-x;
}

p {
    margin: 0;
    white-space: normal;
}

}

.dropdown-submenu {
    position: relative;
    > a::after

{
    @include caret-right ();
    float: right;
    margin-left: .5rem;
    margin-top: .5rem;
}

> .dropdown-menu {
    left: 100%;
    margin-left: 0;
    margin-top: 0;
    top: 0;
}

}

.dropdown-hover {
    &:hover, &.nav-item.dropdown:hover, .dropdown-submenu:hover, &.dropdown-submenu:hover

{
    > .dropdown-menu

{
    display: block;
}

}
}



.dropdown-menu-xl {
    max-width: 420px;
    min-width: 360px;
    padding: 0;
    .dropdown-divider

{
    margin: 0;
}

.dropdown-item {
    padding: $dropdown-padding-y $dropdown-item-padding-x;
}

p {
    margin: 0;
    white-space: normal;
}

}


.dropdown-footer,
.dropdown-header {
    display: block;
    font-size: $font-size-sm;
    padding: .5rem $dropdown-item-padding-x;
    text-align: center;
}


.open:not(.dropup) > .animated-dropdown-menu {
    @include animation(flipInX .7s both);
    backface-visibility: visible !important;
}

.navbar-custom-menu > .navbar-nav {
    > li

{
    position: relative;
    > .dropdown-menu

{
    position: absolute;
    right: 0;
    left: auto;
}

}
}

@include media-breakpoint-down(sm) {
    .navbar-custom-menu > .navbar-nav {
        float: right;
        > li

{
    position: static;
    > .dropdown-menu

{
    position: absolute;
    right: 5%;
    left: auto;
    border: 1px solid #ddd;
    background-color: $white;
}

}
}
}

.navbar-nav > .user-menu {
    > .nav-link::after

{
    content: none;
}

> .dropdown-menu {
    @include border-top-radius(0);
    padding: 0;
    width: 280px;
    &, > .user-body

{
    @include border-bottom-radius(4px);
}

// Header menu > li.user-header {
    height: 175px;
    padding: 10px;
    text-align: center;
    // User image > img

{
    z-index: 5;
    height: 90px;
    width: 90px;
    border: 3px solid;
    border-color: transparent;
    border-color: rgba(255, 255, 255, .2);
}

> p {
    z-index: 5;
    font-size: 17px;
    //text-shadow: 2px 2px 3px #333333;
    margin-top: 10px;
    > small

{
    display: block;
    font-size: 12px;
}

}
}

// Menu Body > .user-body {
    @include clearfix ();
    border-bottom: 1px solid $gray-700;
    border-top: 1px solid $gray-300;
    padding: 15px;
    a

{
    @include media-breakpoint-up(sm) {
        background-color: $white !important;
        color: $gray-700 !important;
    }
}

}

> .user-footer {
    @include clearfix ();
    background-color: $gray-100;
    padding: 10px;
    .btn-default

{
    color: $gray-600;
    &:hover

{
    @include media-breakpoint-up(sm) {
        background-color: $gray-100;
    }
}

}
}
}

.user-image {
    @include media-breakpoint-up(sm) {
        float: none;
        line-height: 10px;
        margin-right: .4rem;
        margin-top: -8px;
    }

    border-radius: 50%;
    float: left;
    height: $sidebar-user-image-width;
    margin-right: 10px;
    margin-top: -2px;
    width: $sidebar-user-image-width;
}

}

@include dark-mode () {
    .dropdown-menu {
        background-color: $dark;
        color: $white;
    }

    .dropdown-item {
        color: $white;
        &:focus, &:hover

{
    background-color: lighten($dark, 5%);
}

}

.dropdown-divider {
    border-color: $gray-600;
}

.navbar-nav > .user-menu > .dropdown-menu {
    > .user-footer

{
    background-color: lighten($dark, 2.5%);
    color: $white;
    .btn-default

{
    color: $white;
    &:hover, &:focus

{
    background-color: lighten($dark, 5%);
    color: $gray-300;
}

&:focus {
    background-color: lighten($dark, 7.5%);
}

}
}

> .user-body {
    border-color: $gray-600;
}

    > .user-body a {
        background-color: transparent !important;
        color: $white !important;
        &:hover, &:focus

{
    color: $gray-400 !important;
}

}
}
}
 
.dropup,
.dropright,
.dropdown,
.dropleft {
    position: relative;
}

.dropdown-toggle {
    white-space: nowrap;
    // Generate the caret automatically @include caret();
}

 
.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: $zindex-dropdown;
    display: none;
    // none by default, but block on "open" of the menu float: left;
    min-width: $dropdown-min-width;
    padding: $dropdown-padding-y $dropdown-padding-x;
    margin: $dropdown-spacer 0 0;
    // override default ul @include font-size($dropdown-font-size);
    color: $dropdown-color;
    text-align: left;
    // Ensures proper alignment if parent has it changed (e.g., modal footer) list-style: none;
    background-color: $dropdown-bg;
    background-clip: padding-box;
    border: $dropdown-border-width solid $dropdown-border-color;
    @include border-radius($dropdown-border-radius);
    @include box-shadow($dropdown-box-shadow);
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .dropdown-menu# {
            $infix
        }

        -left {
            right: auto;
            left: 0;
        }

        .dropdown-menu# {
            $infix
        }

        -right {
            right: 0;
            left: auto;
        }
    }
}
 
.dropup {
    .dropdown-menu

{
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: $dropdown-spacer;
}

.dropdown-toggle {
    @include caret(up);
}

}

.dropright {
    .dropdown-menu

{
    top: 0;
    right: auto;
    left: 100%;
    margin-top: 0;
    margin-left: $dropdown-spacer;
}

.dropdown-toggle {
    @include caret(right);
    &::after

{
    vertical-align: 0;
}

}
}

.dropleft {
    .dropdown-menu

{
    top: 0;
    right: 100%;
    left: auto;
    margin-top: 0;
    margin-right: $dropdown-spacer;
}

.dropdown-toggle {
    @include caret(left);
    &::before

{
    vertical-align: 0;
}

}
}
     
.dropdown-menu {
    &[x-placement^="top"], &[x-placement^="right"], &[x-placement^="bottom"], &[x-placement^="left"]

{
    right: auto;
    bottom: auto;
}

}
     
.dropdown-divider {
    @include nav-divider($dropdown-divider-bg, $dropdown-divider-margin-y, true);
}

 
.dropdown-item {
    display: block;
    width: 100%;
    // For `<button>`s padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    clear: both;
    font-weight: $font-weight-normal;
    color: $dropdown-link-color;
    text-align: inherit;
    // For `<button>`s text-decoration: if($link-decoration == none, null, none);
    white-space: nowrap;
    // prevent links from randomly breaking onto new lines background-color: transparent;
    // For `<button>`s border: 0;
    // For `<button>`s // Prevent dropdown overflow if there's no padding // See https://github.com/twbs/bootstrap/pull/27703 @if $dropdown-padding-y == 0

{
    &:first-child

{
    @include border-top-radius($dropdown-inner-border-radius);
}

&:last-child {
    @include border-bottom-radius($dropdown-inner-border-radius);
}

}

@include hover-focus() {
    color: $dropdown-link-hover-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-hover-bg);
}

&.active,
&:active {
    color: $dropdown-link-active-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-active-bg);
}

&.disabled,
&:disabled {
    color: $dropdown-link-disabled-color;
    pointer-events: none;
    background-color: transparent;
    // Remove CSS gradients if they're enabled @if $enable-gradients

{
    background-image: none;
}

}
}

.dropdown-menu.show {
    display: block;
}
 
.dropdown-header {
    display: block;
    padding: $dropdown-header-padding;
    margin-bottom: 0;
    // for use with heading elements @include font-size($font-size-sm);
    color: $dropdown-header-color;
    white-space: nowrap;
    // as with > li > a
}
 
.dropdown-item-text {
    display: block;
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    color: $dropdown-link-color;
}
.media {
    display: flex;
    align-items: flex-start;
}

.media-body {
    flex: 1;
}

