@model Warehouse.ViewModels.Admin.OrderPriceCalculateViewModel
@using WarehouseManagementSystem.Extensions

<div class="clearfix"></div>
<br />
<div class="clearfix"></div>
<div class="row">
    <div class="col-xs-12">
        <div class="alert alert-warning alert-dismissible">
            <h4><i class="fa-solid fa-circle-info"></i> Bilgilendirme!</h4>
            <strong>Desi Başına Fiyatlandırma</strong>
            <ul>
                <li>Göndereceğiniz ülkenin para birimine göre ve seçeceğiniz kargo servisine göre fiyatlar değişkenlik gösterebilir!</li>
            </ul>
        </div>
    </div>
</div>
<div class="clearfix"></div>
<br />
<div class="clearfix"></div>
<div class="row">
    @using (Html.BeginForm("OrderPriceCalculator", "Order", new { Area = "Admin" }, FormMethod.Post, new { id = "orderPriceCalculateForm", role = "form" }))
    {

        <div class="row">
            <div class="col-xs-12">
                @Html.AntiForgeryToken()
                @Html.RenderValidationSummary(true)
            </div>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
            <div class="row">
                @Html.EditorFor(m => m.Country)
            </div>
        </div>
        <div class="col-xs-10 col-sm-10 col-md-11 col-lg-11 no-padding">



            <div class="form-group form-group-sm col-xs-12 col-sm-12 col-md-3 col-lg-3">
                @Html.TextBoxBlockLabelAsAddonFor(m => m.Weight, new { placeholder = "kg" })
            </div>
            <div class="form-group form-group-sm col-xs-12 col-sm-12 col-md-3 col-lg-3">
                @Html.TextBoxBlockLabelAsAddonFor(m => m.Width, new { placeholder = "cm" })
            </div>
            <div class="form-group form-group-sm col-xs-12 col-sm-12 col-md-3 col-lg-3">
                @Html.TextBoxBlockLabelAsAddonFor(m => m.Height, new { placeholder = "cm" })
            </div>
            <div class="form-group form-group-sm col-xs-12 col-sm-12 col-md-3 col-lg-3">
                @Html.TextBoxBlockLabelAsAddonFor(m => m.Length, new { placeholder = "cm" })
            </div>
            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                <div class="row">
                    @Html.EditorFor(m => m.CargoService)
                </div>
            </div>
            <div class="clearfix"></div>
            <br />
            <div class="clearfix"></div>
            <div class="form-group form-group-sm col-xs-12 col-sm-12 col-md-3 col-lg-3">
                @Html.TextBoxBlockLabelAsAddonFor(m => m.Desi, new { @readonly = "readonly" })
            </div>
            <div class="form-group form-group-sm col-xs-12 col-sm-12 col-md-3 col-lg-3">
                <button style="margin-right:82px;" type="submit" class="btn btn-primary pull-right margin-left10"><span class="fa fa-check"></span>&nbsp;&nbsp;Hesapla</button>
            </div>

        </div>

    }
</div>

<div class="clearfix"></div>
<br />
<br />
<br />
<div class="clearfix"></div>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Servis</th>
            <th>Toplam Fiyat</th>
            <th>Açıklama</th>

        </tr>
    </thead>
    <tbody>
        <tr>

            <td>@Model.Service</td>
            <td>@Model.TotalPrice <span>@Model.Icon</span></td>
            <td>@Model.Description</td>


        </tr>

    </tbody>
</table>

<div class="form-group form-group-sm row">
    <div class="col-xs-12">

        <button class="btn btn-danger pull-right" type="button" data-dismiss="modal"><span class="fa fa-times"></span>&nbsp;&nbsp;İptal</button>
    </div>
</div>

<style>

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<script>




    $('#NestedCargo').prop('disabled', true);
    var cityId = $("#NestedCargo").val();
    var NestedCity = $("#CityNumber");
    if (cityId != "" && cityId != null) {
        $('#NestedCargo').prop('disabled', false);
    }


    $(function () {
        $("#NestedCountry").on("change", function () {

            $('#NestedCargo').prop('disabled', false);
            var id = $("#NestedCountry").val();

            if (id != "" && id != null) {
                $.ajax({
                    url: '/Admin/Order/NestedCargo',
                    data: { id: id },
                    type: "POST",
                    dataType: "json",
                    success: function (data) {
                        $("#NestedCargo").empty();

                        $("#NestedCargo").append("<option value'" + String.empty + "'>" + "Kargo servis Seçiniz" + "</Option")
                        for (var i = 0; i < data.length; i++) {
                            $("#NestedCargo").append("<option value='" + data[i].Id + "'>" + data[i].Name + "</Option>")
                        }
                        if (data.length == 0) {
                            console.log("required kaldırıldı")
                            $('#NestedCargo').prop('disabled', true);
                            $('#NestedCargo').prop('required', true);
                        }
                    },
                    error: function () {
                        $('#NestedCargo').prop('disabled', true);
                    },
                });
            }
            else {
                $("#NestedCargo").empty();
                $('#NestedCargo').prop('disabled', true);
                $("#NestedCargo").append("<option value'" + String.empty + "'>" + "Kargo servis Seçiniz" + "</Option")
            }
        });





    });
</script>
